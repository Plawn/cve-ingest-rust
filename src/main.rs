use chrono::Utc;
use cve_ingest_rust::{CveDb, Window};
use std::error::Error;
use chrono::TimeZone;


fn main() -> Result<(), Box<dyn Error>> {
    let _chunk_size = 1000;
    let d = CveDb::from("db", "_db");
    let start =  Utc.with_ymd_and_hms(2023, 12, 1, 0, 0, 0).unwrap();
    let end =  Utc.with_ymd_and_hms(2023, 12, 30, 0, 0, 0).unwrap();
    let test_window = Some(vec![Window { start, end }]);
    let cpes_updated = &d.update_cpes(test_window); // working
    println!("did update {} cpes", &cpes_updated);
    // let _ = &d.update_cves(); // TODO
    d.bind(); // working
    Ok(())
}
